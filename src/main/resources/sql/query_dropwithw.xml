<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="dps.dropw.select.course.details">
		SELECT 
		  REG.STDNO							              	AS	STUDENT_NO
		, REG.STDSTATCD										AS  STDSTATCD
		, REG.CRSNO											AS	COURSE_NO
		, REG.L_ABR_CRSNO                     				AS  L_ABR_CRSNO
		, DECODE (
              :paramLocale
              ,'en',REG.CRSLNM
              ,REG.A_CRSLNM
             )                        						AS  COURSE_NAME
        , REG.SECTCD										AS	SECT_CODE
		, REG.SECTNO                          				AS  SECTION_NO           
		, REG.L_ABR_YRSEM                     				AS  YEAR_SEM
		, DECODE(
              MOD(REG.SECTNO,10)
              , 0, REG.CRSCRED, 0
            )                          						AS  CREDITS
	    , DECODE(
	              :paramMode
	              ,'FULL',  CASE 
	                               WHEN ( DECODE(
	                                MOD(REG.SECTNO,10)
	                                , 0, REG.CRSCRED, 0
	                                  ) - 12) 
	                             >=0  THEN 'Y'
	                            ELSE 'N'
	                         END   
	              ,'PART',  CASE 
	                               WHEN ( DECODE(
	                                MOD(REG.SECTNO,10)
	                                , 0, REG.CRSCRED, 0
	                                  ) - 3) 
	                             >=0  THEN 'Y'
	                            ELSE 'N'
	                         END  
	              ,'Y'
	         )                                       		AS  CREDIT_DROP_ALLOWED            
    , TO_CHAR(
                REG.FIRSTWTHDTE, 'DD/MM/YYYY'
              )                         					AS  FIRST_WITHDRAW_DATE
    , TO_CHAR(
                REG.SECONDWTHDTE-1, 'DD/MM/YYYY'
             )                          					AS  SECOND_WITHDRAW_DATE
    , TUFEE.FEE												AS	TUTION_FEE
    ,(
	            SELECT 
	              DECODE 
	              (
	                :paramLocale
	                ,'en', CODENM, A_CODENM
	                )
	              FROM SIS_CODES
	              WHERE SISCODECD= T_DROP.STATUSCD
	  )			 											AS 		STATUS_DESC
		   FROM
                  V_STD_CURREG        REG
                , TUITION_FEES_STD    TUFEE
                , T_REG_DROPW         T_DROP
        WHERE 
                REG.L_ABR_CRSNO = TUFEE.L_ABR_CRSNO	(+)
            AND REG.STDNO  		= TUFEE.STDNO 		(+)
            AND REG.SECTCD  	= TUFEE.SECTCD 		(+)
            
            AND REG.STDNO       = T_DROP.STDNO 		(+)
            AND REG.STDSTATCD   = T_DROP.STDSTATCD 	(+)                  
            AND REG.CRSNO       = T_DROP.CRSNO 		(+)
            AND REG.SECTCD      = T_DROP.SECTCD 	(+)         
            AND REG.SECTNO      = T_DROP.SECTNO 	(+)        
            AND	
           	  (
			         SYSDATE between to_date(FIRSTWTHDTE) and to_date(SECONDWTHDTE)
			         OR :paramDropTimeApplied = 0
   			)
            AND 
                REG.L_ABR_STDNO =  :paramStdId
			
	</entry>
	<entry key="dps.dropw.insert.course.temp.for.drop">
		INSERT INTO 
		            T_REG_DROPW
		                        (
		                            STDNO
		                          , STDSTATCD
		                          , CRSNO
		                          , SECTCD
		                          , SECTNO
		                          , STATUSCD
		                          , CREATE_DATE
		                          , CREATE_USERNAME
		                        )
		      		VALUES  
		                      (
		                            :paramStdNo
		                          , :paramStdStatCode
		                          , :paramCourseNo
		                          , :paramStdSectCode
		                          , :paramStdSectNo
		                          , (
		                                SELECT
		                                    CODES.SISCODECD	
		                                FROM
		                                        SIS_CODES       CODES
		                                    ,   SIS_CODE_TYPES  TYPES
		                                WHERE
		                                        CODES.SISCODETYPCD =  TYPES.SISCODETYPCD
		                                    AND TYPES.SISCODETYPNM = 'APPROVAL_STATUS'
		                                    AND CODES.L_ABR_CODE  = :paramStatusCode
                                	)
		                          , SYSDATE
		                          , :paramUserCode
		                      )
	</entry>
	<entry key="dps.dropw.select.course.temp.for.drop">
		SELECT 
       			CRS.CRSNO									AS	COURSE_NO
		      , CRS.L_ABR_CRSNO								AS  L_ABR_CRSNO
		      , DECODE
		            (
		              :paramLocale,
		              'en', CRS.CRSLNM, 
		              		CRS.A_CRSLNM
		            )										AS  COURSE_NAME
		      , T_DROP.SECTNO								AS  SECTION_NO
		      ,	T_DROP.SECTCD								AS	SECT_CODE
		      , DECODE(
              		MOD(T_DROP.SECTNO,10)
              		, 0, CRS.CRSCRED, 0
            		)                          				AS  CREDITS
		      ,(
	                SELECT 
	                  DECODE 
	                  (
	                    :paramLocale
	                    ,'en', CODENM, A_CODENM
	                    )
	                  FROM SIS_CODES
	                  WHERE SISCODECD= T_DROP.STATUSCD
		      )			 									AS 	STATUS_DESC
		       
		     , (
		      	SELECT
		      			L_ABR_CODE
                FROM 
                		SIS_CODES
       			WHERE 
       					SISCODECD= T_DROP.STATUSCD 
		      )  											AS 	STATUS_CODE_NAME
		   	, COMMENTS										AS	COMMENTS		    
		FROM
		      T_REG_DROPW T_DROP
		    , CRS_BASIC   CRS
		WHERE
		          T_DROP.CRSNO = CRS.CRSNO
		      AND STDNO       = :paramStdNo
		      AND STDSTATCD   = :paramStdStatCode	
	</entry>
	<entry key="dps.dropw.select.student.records.by.employee">
			SELECT
		      	DISTINCT
				  	REG.STDNO							              	AS	STUDENT_NO
				, PORTAL.STD_ID											AS	STUDENT_ID
			  	, 	REG.STDSTATCD										AS  STDSTATCD
		    	,	DECODE
						    (
								        :paramLocale
								      , 'en', STD_NAME
								            , A_STD_NAME
						    )                                       	AS  STUDENT_NAME
				, PORTAL.COHORT                                 		AS  COHORT						    
			    , 	GENDER                                				AS  GENDER
			    , 	STD_EMAIL                             				AS  EMAIL
		        ,	SECT.CCYRCD											AS	CCYRCD
                ,	DECODE
						    (
								        :paramLocale
								      , 'en', SEM.SEMNM
								            , SEM.A_SEMNM
						    )                                       	AS  SEMCD
	          	, DECODE
			                (
			                    :paramLocale
			                    ,'en', PORTAL.DEGREE_NAME
			                    ,PORTAL.A_DEGREE_NAME
			                )                                         	AS  DEGREE_NAME
	          	, DECODE 
			                (
			                      :paramLocale
			                      ,'en', PORTAL.COLLEGENM
			                      , PORTAL.A_COLLEGENM
			                )                                         	AS  COLLEGE_NAME			    
			    , 	DECODE
						    (
								        :paramLocale
								      , 'en', MAJORNAME
								            , A_MAJORNAME
						    )                                       	AS  MAJOR
			    , 	FUNC_APPROVE_STATUS(
						                    REG.STDNO
						                    , :paramAdvisorRoleName 
						                    , :paramFormName
			                    )                       				AS  ADVISOR_STATUS
			      ,	NVL(FUNC_IS_APPROVER(
							                  REG.STDNO
							                , REG.STDSTATCD
							                , :paramFormName
							                , :paramRoleName
							                , :paramEmpNo
			                          ),'N')						 			AS	IS_APPROVER	 	
			
			    
		FROM
				  V_STD_CURREG 	REG
				, T_REG_DROPW	T_DROP	
				, V_STDINFO_PORTAL  PORTAL
				 ,COL_CEN            COL
				, STD_THESIS        THESIS
				, V_DEPT_MAJOR      DEPT_MAJ
				, COL_DEPT          DEPT
				, SECT              SECT
                , SEM               SEM
		WHERE 
                      SEM.SEMCD = SECT.SEMCD
			      AND REG.STDNO     = PORTAL.STDNO
			      AND REG.STDNO		=	T_DROP.STDNO	
			      AND REG.STDSTATCD = PORTAL.STDSTATCD
			      AND DEPT.COLCENCD     = COL.COLCENCD
			      AND DEPT_MAJ.DEPTNO   = DEPT.DEPTNO (+)
			--      AND THESIS.STDNO       = REG.STDNO (+)
			      AND THESIS.STDNO (+)      = PORTAL.STDNO 
			      AND PORTAL.COLLEGE_CODE = COL.L_ABR_CC
				  AND T_DROP.SECTCD     =   SECT.SECTCD
		          AND 
		              ( 
		                      :paramColCode = COL.COLCENCD		 		--  College DEAN/ ASST DEAN
		                  OR  :paramColCode IS NULL               		-- 	DPS DEAN / DPS STAFF
		              )
                       
		          AND
		            (
		                      :paramAdvisor = PORTAL.ADVISOR			--	ADVISOR
		                  OR  :paramAdvisor IS NULL
		            )

		          AND
		            (
		                      :paramSupervisor =  THESIS.SUPVISREMPNO	--	SUPERVISOR
		                  OR  :paramSupervisor  IS NULL
		            )
                     
		          AND
		            (
		                      :paramDeptCode  = DEPT.DEPTNO				--	HOD
		                  OR  :paramDeptCode  IS NULL
		            )
                     
		         AND
					(
					          :paramStdNo =REG.STDNO
					      OR  :paramStdNo IS NULL
					)

			ORDER BY  CCYRCD DESC, SEMCD, IS_APPROVER DESC , PORTAL.COHORT DESC 
	</entry>
	
	<entry key="dps.dropw.update.course.temp.for.drop">
			UPDATE
			        T_REG_DROPW
			    SET STATUSCD = (
			                      SELECT
			                          CODES.SISCODECD	
			                      FROM
			                              SIS_CODES       CODES
			                          ,   SIS_CODE_TYPES  TYPES
			                      WHERE
			                              CODES.SISCODETYPCD =  TYPES.SISCODETYPCD
			                          AND TYPES.SISCODETYPNM = 'APPROVAL_STATUS'
			                          AND CODES.L_ABR_CODE  = :paramStatusCode
			                    )
			    , UPDATE_DATE     = SYSDATE
			    , UPDATE_USERNAME = :paramUserCode
			    , COMMENTS		  =	:paramRemarks 			                    
			WHERE
			        STDNO = :paramStdNo
			    AND STDSTATCD = :paramStdStatCode
			    AND CRSNO = :paramCourseNo
			    AND SECTCD = :paramSectCode
			    AND SECTNO = :paramSectionNo	
	</entry>
</properties>